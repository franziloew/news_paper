#scale_fill_discrete(name = "", labels = c("Reader preferences", "Topic Correlation")) +
labs(x=NULL, y=NULL, caption = "Scores are standardized between 0 and 1") +
scale_y_discrete(labels=c("Topic correlation", "Reader preferences")) +
theme(
strip.text.y = element_text(angle = 0)
) +
theme_hc() +
facet_grid(rows = vars(medium))
p2 <- final_df %>%
group_by(medium) %>%
dplyr::summarise(correlation = cor(count_relative, corr)) %>%
ggplot(aes(medium, correlation)) +
geom_col(aes(fill=correlation), show.legend = F) +
geom_text(aes(label=round(correlation,2)), vjust=-0.1, color="red") +
geom_hline(aes(yintercept=0)) +
theme_void() +
labs(x=NULL, y="Correlation") +
scale_y_continuous(limits = c(-1,1), position = "right") +
facet_wrap(medium~., scales = "free_x", ncol = 1) +
theme(strip.text = element_blank())
p1 + p2 + plot_layout(width = c(10,1))
corr.df.sm <- corr.df %>%
select(topic, source, BPW_theta) %>%
spread(source, BPW_theta)
x <- as.matrix(corr.df.sm[,-1])
rs <- correlate(x)
corr_plot <- rs %>%
as_tibble() %>%
dplyr::rename(source1 = rowname) %>%
gather(key = source2, value = corr, -source1) %>%
mutate(
type1 = ifelse(source1 %in% news, "news", "party"),
type2 = ifelse(source2 %in% news, "news", "party")
)
# prepare correlation data
corr_p <- corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "party") %>%
transmute(
medium = source1,
party = source2,
corr = corr) %>% mutate(
party_order = ifelse(party == "DIE LINKE", 1, 0),
party_order = ifelse(party == "B90/GRÜNE", 2, party_order),
party_order = ifelse(party == "SPD", 3, party_order),
party_order = ifelse(party == "FDP", 4, party_order),
party_order = ifelse(party == "CDU", 5, party_order),
party_order = ifelse(party == "AfD", 6, party_order)
)
final_df <- left_join(plot, corr_p, by = c("medium","party")) %>%
filter(!is.na(corr)) %>%
select(medium, party,party_order, count_relative, corr) %>%
mutate(
count_rel_scaled = rescale(count_relative,x_min = min(count_relative),x_max = max(count_relative),0,1),
corr_scaled = rescale(corr, x_min = min(corr), max(corr),0,1)
)
p1 <- final_df %>%
select(-count_relative, - corr) %>%
gather(metric, value, count_rel_scaled:corr_scaled) %>%
ggplot(aes(reorder(party,party_order), metric)) +
geom_tile(aes(fill=value), show.legend = F) +
scale_fill_gradient(low = "white", high = "gray") +
geom_text(aes(label=round(value, 2))) +
#scale_fill_discrete(name = "", labels = c("Reader preferences", "Topic Correlation")) +
labs(x=NULL, y=NULL, caption = "Scores are standardized between 0 and 1") +
scale_y_discrete(labels=c("Topic correlation", "Reader preferences")) +
theme(
strip.text.y = element_text(angle = 0)
) +
theme_hc() +
facet_grid(rows = vars(medium))
p2 <- final_df %>%
group_by(medium) %>%
dplyr::summarise(correlation = cor(count_relative, corr)) %>%
ggplot(aes(medium, correlation)) +
geom_col(aes(fill=correlation), show.legend = F) +
geom_text(aes(label=round(correlation,2)), vjust=-0.1, color="red") +
geom_hline(aes(yintercept=0)) +
theme_void() +
labs(x=NULL, y="Correlation") +
scale_y_continuous(limits = c(-1,1), position = "right") +
facet_wrap(medium~., scales = "free_x", ncol = 1) +
theme(strip.text = element_blank())
p1 + p2 + plot_layout(width = c(10,1))
load("../output/polldats.Rda")
df.small %>%
filter(date > as.Date("2017-01-01")) %>%
filter(date < as.Date("2018-06-30")) -> df.plot
df.small %>%
filter(date > as.Date("2017-01-01")) %>%
filter(date < as.Date("2018-06-30")) -> df.plot
p <- ggplot(df.plot) +
geom_point(aes(date, pollvalue,
text = paste("institute:", institute),
color = party),
alpha = 0.6, size = 0.8) +
geom_line(aes(date, ma, color = party), size = 1) +
geom_vline(xintercept = as.Date("2017-09-24"), linetype=2) +
geom_vline(xintercept = as.Date("2017-06-01"), linetype=2) +
geom_vline(xintercept = as.Date("2018-03-01"), linetype=2) +
scale_color_manual(values = c("#009ee0", "#32302e","#ffed00","#46962b","#ec008c", "#E3000F")) +
theme_hc() +
labs(x=NULL,y=NULL,color=NULL)
p
corr.df.dates <- theta %>%
group_by(topic, type, source, joint_label, month, year) %>%
dplyr::summarise(
theta = mean(theta, na.rm = T),
BPW_theta = mean(BPW_theta, na.rm = T),
BPW = mean(BPW, na.rm = T)
) %>%
ungroup()
polls.plot <- df.small %>%
filter(date > as.Date("2017-01-01")) %>%
filter(date < as.Date("2018-06-30"))
ggplot(polls.plot) +
geom_point(aes(date, pollvalue,
text = paste("institute:", institute),
color = party),
alpha = 0.6, size = 0.8) +
geom_line(aes(date, ma, color = party), size = 1) +
geom_vline(xintercept = as.Date("2017-09-24"), linetype=2) +
geom_vline(xintercept = as.Date("2017-06-01"), linetype=2) +
geom_vline(xintercept = as.Date("2018-03-01"), linetype=2) +
scale_color_manual(values = c("#009ee0", "#32302e","#ffed00","#46962b","#ec008c", "#E3000F")) +
theme_hc() +
labs(x=NULL,y=NULL,color=NULL)
medium = source1,
corr_plot <- rs %>%
as_tibble() %>%
dplyr::rename(source1 = rowname) %>%
gather(key = source2, value = corr, -source1) %>%
mutate(
type1 = ifelse(source1 %in% news, "news", "party"),
type2 = ifelse(source2 %in% news, "news", "party")
) %>%
transmute(
medium = source1,
party = source2,
corr = corr) %>% mutate(
party_order = ifelse(party == "DIE LINKE", 1, 0),
party_order = ifelse(party == "B90/GRÜNE", 2, party_order),
party_order = ifelse(party == "SPD", 3, party_order),
party_order = ifelse(party == "FDP", 4, party_order),
party_order = ifelse(party == "CDU", 5, party_order),
party_order = ifelse(party == "AfD", 6, party_order)
)
radar <- corr_plot %>%
filter(medium %in% news) %>%
filter(party %in% parties) %>%
select(-party_order) %>%
spread(key = party, value = corr)
ggiraphExtra::ggRadar(radar, aes(color = medium),
rescale = F,
interactive = T,
alpha = 0)
ggiraphExtra::ggRadar(radar, aes(color = medium),
rescale = T,
interactive = T,
alpha = 0)
install.packages("lubridate")
options(htmltools.dir.version = FALSE)
library(tidyverse)
library(viridis)
library(ggthemes)
library(patchwork)
rm(list = ls())
color1 <- "#D55E00"
color2 <- "#0072B2"
color3 <- "#CC79A7"
corr.df <- theta %>%
mutate(year=lubridate::year(date),
month = lubridate::month(date),
date = as.Date(paste0(year,"/",month,"/1"))) %>%
group_by(topic, type, source, joint_label, date) %>%
dplyr::summarise(
SentiWS_theta = mean(SentiWS_theta, na.rm = T),
BPW_theta = mean(BPW_theta, na.rm = T),
sentDict_theta = mean(sentDict_theta, na.rm = T)
) %>%
ungroup()
library(stm)
# stm results
load("../output/models/finalmodel_50.RDa")
# sentiment results
load("../output/sentiment.Rda")
k <- stmOut$settings$dim$K
model_df <- model_df %>%
dplyr::mutate(doc_index = as.numeric(rownames(.))) %>%
left_join(., sent_df %>% select(-source, -type), by="doc_index")
sagelabs <- sageLabels(stmOut, 20)
newsLabels <- as.data.frame(sagelabs$cov.betas[[1]]$problabels) %>%
transmute(topic = as.numeric(rownames(.)),
topic_name_news = paste(V1,V2,V3))
pressLabels <- as.data.frame(sagelabs$cov.betas[[2]]$problabels) %>%
transmute(topic = as.numeric(rownames(.)),
topic_name_press = paste(V1,V2,V3))
topics.df <- left_join(newsLabels, pressLabels, by="topic") %>%
mutate(label1 = paste(topic_name_news, topic_name_press))
for (i in seq(k)) {
label <- paste(unique(unlist(strsplit(topics.df$label1[i], " "))), collapse = " ")
topics.df$joint_label[i] <- paste("Topic",topics.df$topic[i],":", label)
}
topics.df %>%
select(joint_label, topic_name_news, topic_name_press) %>%
head(7) %>%
knitr::kable(align="l", format = 'html', rnames = F)
theta <- as.data.frame(stmOut$theta) %>% # get all theta values for each document
mutate(doc_index = as.numeric(rownames(.))) %>%
# convert to long format
gather(topic, theta, -doc_index) %>%
mutate(topic = as.numeric(gsub("V","",topic))) %>%
# join with topic df
left_join(., topics.df, by="topic") %>%
# join with model_df
left_join(., model_df %>%
select(date,type,source,doc_index,title_text), by="doc_index") %>%
# join with sentiment df
left_join(., sent_df %>% select(-source, -type), by="doc_index") %>%
# delete documents that are published in Mai 2017
mutate(
year = lubridate::year(date),
month = lubridate::month(date)
) %>%
filter(month != 5)
topicmean <- theta %>%
group_by(topic, joint_label) %>%
summarise(frequency = mean(theta)) %>%
ungroup() %>%
arrange(desc(frequency)) %>%
mutate(order = row_number())
# select a random document
# doc <- sample(unique(theta$doc_index),1)
sample <- theta %>% filter(doc_index == doc)
corr.df <- theta %>%
mutate(year=lubridate::year(date),
month = lubridate::month(date),
date = as.Date(paste0(year,"/",month,"/1"))) %>%
group_by(topic, type, source, joint_label, date) %>%
dplyr::summarise(
SentiWS_theta = mean(SentiWS_theta, na.rm = T),
BPW_theta = mean(BPW_theta, na.rm = T),
sentDict_theta = mean(sentDict_theta, na.rm = T)
) %>%
ungroup()
theta <- theta %>%
mutate(SentiWS_theta = SentiWS_dummy*theta,
BPW_theta = BPW_dummy*theta,
sentDict_theta = sentDict_dummy*theta
)
corr.df <- theta %>%
mutate(year=lubridate::year(date),
month = lubridate::month(date),
date = as.Date(paste0(year,"/",month,"/1"))) %>%
group_by(topic, type, source, joint_label, date) %>%
dplyr::summarise(
SentiWS_theta = mean(SentiWS_theta, na.rm = T),
BPW_theta = mean(BPW_theta, na.rm = T),
sentDict_theta = mean(sentDict_theta, na.rm = T)
) %>%
ungroup()
library(corrr)
news <- c("DIE WELT","stern.de", "ZEIT ONLINE", "FOCUS Online", "Bild.de", "SPIEGEL ONLINE", "tagesschau.de" )
parties <- c("CDU", "SPD", "AfD", "B90/GRÜNE", "DIE LINKE", "FDP" )
unique(corr.df$date)
dates <- unique(corr.df$date)
for (x in length(dates)) {
print(dates[x])
}
for (x in 1:length(dates)) {
print(dates[x])
}
dates <- unique(corr.df$date)
for (x in 1:length(dates)) {
corr.df.sm <- corr.df %>%
filter(date == dates[x]) %>%
select(topic, source, BPW_theta) %>%
spread(source, BPW_theta)
x <- as.matrix(corr.df.sm[,-1])
rs <- correlate(x)
rs %>% network_plot()
}
rs %>% network_plot()
dates <- unique(corr.df$date)
i <- 0
for (x in 1:length(dates)) {
i <- i+1
df_name <- paste0("rs",i)
corr.df.sm <- corr.df %>%
filter(date == dates[x]) %>%
select(topic, source, BPW_theta) %>%
spread(source, BPW_theta)
x <- as.matrix(corr.df.sm[,-1])
df_name <- correlate(x)
}
rs %>%
gather(party, corr, -rowname)
rs %>%
gather(party, corr, -rowname) %>%
mutate(date = dates[x])
rs %>%
gather(party, corr, -rowname) %>%
mutate(date = dates[1])
dates <- unique(corr.df$date)
rm(corr.df.time)
for (i in 1:length(dates)) {
corr.df.sm <- corr.df %>%
filter(date == dates[i]) %>%
select(topic, source, BPW_theta) %>%
spread(source, BPW_theta)
x <- as.matrix(corr.df.sm[,-1])
temp <- correlate(x) %>%
gather(party, corr, -rowname) %>%
mutate(date = dates[i])
if (!exists(corr.df.time)) {
corr.df.time <- temp
} else {
corr.df.time <- bind_rows(corr.df.time, temp)
}
}
#rm(corr.df.time)
for (i in 1:length(dates)) {
corr.df.sm <- corr.df %>%
filter(date == dates[i]) %>%
select(topic, source, BPW_theta) %>%
spread(source, BPW_theta)
x <- as.matrix(corr.df.sm[,-1])
temp <- correlate(x) %>%
gather(party, corr, -rowname) %>%
mutate(date = dates[i])
if (!exists(corr.df.time)) {
corr.df.time <- temp
} else {
corr.df.time <- bind_rows(corr.df.time, temp)
}
}
exists(corr.df.time)
exists(corr.df)
exist(corr.df)
exists("corr.df")
dates <- unique(corr.df$date)
rm(corr.df.time)
for (i in 1:length(dates)) {
corr.df.sm <- corr.df %>%
filter(date == dates[i]) %>%
select(topic, source, BPW_theta) %>%
spread(source, BPW_theta)
x <- as.matrix(corr.df.sm[,-1])
temp <- correlate(x) %>%
gather(party, corr, -rowname) %>%
mutate(date = dates[i])
if (!exists("corr.df.time")) {
corr.df.time <- temp
} else {
corr.df.time <- bind_rows(corr.df.time, temp)
}
}
View(corr.df.time)
hypo2 <- polls.plot %>%
filter(date > as.Date("2017-06-01")) %>%
filter(date < as.Date("2018-03-01")) %>%
mutate(
month = lubridate::month(date),
year = lubridate::year(date),
date = as.Date(paste0(year,"/",month,"/1")),
party = ifelse(party=="GRÜNE","B90/GRÜNE",party),
party = ifelse(party=="LINKE","DIE LINKE",party),
party = ifelse(party=="CDU/CSU","CDU",party)
) %>%
group_by(party,date) %>%
dplyr::summarise(ma = mean(ma)) %>%
ungroup() %>%
group_by(party) %>%
ungroup() %>%
left_join(.,corr.df.time, by=c("party","date"))
load("../output/polldats.Rda")
polls.plot <- df.small %>%
filter(date > as.Date("2017-01-01")) %>%
filter(date < as.Date("2018-06-30"))
ggplot(polls.plot) +
geom_point(aes(date, pollvalue,
text = paste("institute:", institute),
color = party),
alpha = 0.6, size = 0.8) +
geom_line(aes(date, ma, color = party), size = 1) +
geom_vline(xintercept = as.Date("2017-09-24"), linetype=2) +
geom_vline(xintercept = as.Date("2017-06-01"), linetype=2) +
geom_vline(xintercept = as.Date("2018-03-01"), linetype=2) +
scale_color_manual(values = c("#009ee0", "#32302e","#ffed00","#46962b","#ec008c", "#E3000F")) +
theme_hc() +
labs(x=NULL,y=NULL,color=NULL)
hypo2 <- polls.plot %>%
filter(date > as.Date("2017-06-01")) %>%
filter(date < as.Date("2018-03-01")) %>%
mutate(
month = lubridate::month(date),
year = lubridate::year(date),
date = as.Date(paste0(year,"/",month,"/1")),
party = ifelse(party=="GRÜNE","B90/GRÜNE",party),
party = ifelse(party=="LINKE","DIE LINKE",party),
party = ifelse(party=="CDU/CSU","CDU",party)
) %>%
group_by(party,date) %>%
dplyr::summarise(ma = mean(ma)) %>%
ungroup() %>%
group_by(party) %>%
ungroup() %>%
left_join(.,corr.df.time, by=c("party","date"))
ggplot(hypo2, aes(date, cor_norm, color = medium, linetype = medium)) +
geom_line() +
geom_line(aes(date,ma_norm), color="red", show.legend = F) +
geom_hline(yintercept = 0, size = 0.3, color = color1) +
facet_wrap(~party) +
theme_hc() +
scale_color_viridis_d() +
labs(y=NULL, x =NULL) +
scale_x_date(date_breaks = "2 month", date_labels = "%b/%y") +
theme(legend.position = "bottom",
legend.title = element_blank()) +
guides(col = guide_legend(nrow = 1))
hypo2 <- polls.plot %>%
filter(date > as.Date("2017-06-01")) %>%
filter(date < as.Date("2018-03-01")) %>%
mutate(
month = lubridate::month(date),
year = lubridate::year(date),
date = as.Date(paste0(year,"/",month,"/1")),
party = ifelse(party=="GRÜNE","B90/GRÜNE",party),
party = ifelse(party=="LINKE","DIE LINKE",party),
party = ifelse(party=="CDU/CSU","CDU",party)
) %>%
group_by(party,date) %>%
dplyr::summarise(ma = mean(ma)) %>%
ungroup() %>%
group_by(party) %>%
ungroup() %>%
left_join(.,corr.df.time, by=c("party","date")) %>%
mutate(
cor_norm = rescale(corr, x_min = min(corr), x_max = max(corr), -1,1),
ma_norm = rescale(ma, min(ma), max(ma), -1,1)
)
rescale <- function(x,x_min,x_max,a,b){
(x-x_min)/(x_max-x_min)*(b-a)+a
}
hypo2 <- polls.plot %>%
filter(date > as.Date("2017-06-01")) %>%
filter(date < as.Date("2018-03-01")) %>%
mutate(
month = lubridate::month(date),
year = lubridate::year(date),
date = as.Date(paste0(year,"/",month,"/1")),
party = ifelse(party=="GRÜNE","B90/GRÜNE",party),
party = ifelse(party=="LINKE","DIE LINKE",party),
party = ifelse(party=="CDU/CSU","CDU",party)
) %>%
group_by(party,date) %>%
dplyr::summarise(ma = mean(ma)) %>%
ungroup() %>%
group_by(party) %>%
ungroup() %>%
left_join(.,corr.df.time, by=c("party","date")) %>%
mutate(
cor_norm = rescale(corr, x_min = min(corr), x_max = max(corr), -1,1),
ma_norm = rescale(ma, min(ma), max(ma), -1,1)
)
ggplot(hypo2, aes(date, cor_norm, color = medium, linetype = medium)) +
geom_line() +
geom_line(aes(date,ma_norm), color="red", show.legend = F) +
geom_hline(yintercept = 0, size = 0.3, color = color1) +
facet_wrap(~party) +
theme_hc() +
scale_color_viridis_d() +
labs(y=NULL, x =NULL) +
scale_x_date(date_breaks = "2 month", date_labels = "%b/%y") +
theme(legend.position = "bottom",
legend.title = element_blank()) +
guides(col = guide_legend(nrow = 1))
hypo2 <- polls.plot %>%
filter(date > as.Date("2017-06-01")) %>%
filter(date < as.Date("2018-03-01")) %>%
mutate(
month = lubridate::month(date),
year = lubridate::year(date),
date = as.Date(paste0(year,"/",month,"/1")),
party = ifelse(party=="GRÜNE","B90/GRÜNE",party),
party = ifelse(party=="LINKE","DIE LINKE",party),
party = ifelse(party=="CDU/CSU","CDU",party)
) %>%
group_by(party,date) %>%
dplyr::summarise(ma = mean(ma)) %>%
ungroup() %>%
group_by(party) %>%
ungroup() %>%
left_join(.,corr.df.time, by=c("party","date")) %>%
filter(rowname %in% news) %>%
mutate(
medium = rowname,
cor_norm = rescale(corr, x_min = min(corr), x_max = max(corr), -1,1),
ma_norm = rescale(ma, min(ma), max(ma), -1,1)
)
ggplot(hypo2, aes(date, cor_norm, color = medium, linetype = medium)) +
geom_line() +
geom_line(aes(date,ma_norm), color="red", show.legend = F) +
geom_hline(yintercept = 0, size = 0.3, color = color1) +
facet_wrap(~party) +
theme_hc() +
scale_color_viridis_d() +
labs(y=NULL, x =NULL) +
scale_x_date(date_breaks = "2 month", date_labels = "%b/%y") +
theme(legend.position = "bottom",
legend.title = element_blank()) +
guides(col = guide_legend(nrow = 1))
