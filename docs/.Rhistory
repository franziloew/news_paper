sample <- plot %>% filter(topic==t)
p1 <- sample %>%
filter(type == "news") %>%
ggplot(aes(date, val, color=metric)) +
geom_line() +
geom_hline(aes(yintercept=0), linetype=2, size=0.5) +
theme_hc() +
labs(x=NULL, y=NULL, title = paste(sample$joint_label[1])) +
ggthemes::scale_color_fivethirtyeight() +
facet_grid(cols = vars(source), rows = vars(metric), scales = "free")
p2 <-sample %>%
filter(type == "press") %>%
ggplot(aes(date, val, color=metric)) +
geom_line(show.legend = F) +
geom_hline(aes(yintercept=0), linetype=2, size=0.5) +
theme_hc() +
labs(x=NULL, y=NULL) +
ggthemes::scale_color_fivethirtyeight() +
facet_grid(cols = vars(source), rows = vars(metric), scales = "free")
p1 + p2 + plot_layout(ncol=1)
}
news <- c("DIE WELT","stern.de", "ZEIT ONLINE", "FOCUS Online",
"Bild.de", "SPIEGEL ONLINE", "tagesschau.de" )
parties <- c("CDU", "SPD", "AfD", "B90/GRÜNE", "DIE LINKE", "FDP" )
temp <- corr.df %>%
select(topic, source, SentiWS_theta2) %>%
spread(source, SentiWS_theta2) %>%
select(-topic)
cong <- matrix(
ncol = length(parties),
nrow = length(news)
) %>% as_tibble()
colnames(cong) <- parties
rownames(cong) <- news
for (p in 1:length(parties)) {
for (n in 1:length(news)) {
sum = sum(abs(temp[news[n]] - temp[parties[p]]))
c = 1-(sum/2)
cong[news[n],parties[p]] <- c
}
}
cong %>%
mutate(media = rownames(.)) %>%
ggiraphExtra::ggRadar(aes(color = media), rescale = F,
interactive = T,
alpha = 0)
cong %>%
mutate(medium = rownames(.)) %>%
gather(party, metric, parties) %>%
mutate(
party_order = ifelse(party == "DIE LINKE", 1, 0),
party_order = ifelse(party == "B90/GRÜNE", 2, party_order),
party_order = ifelse(party == "SPD", 3, party_order),
party_order = ifelse(party == "FDP", 4, party_order),
party_order = ifelse(party == "CDU", 5, party_order),
party_order = ifelse(party == "AfD", 6, party_order),
# rescale the metric
congru = rescale(metric, min(metric), max(metric),0,1)
) %>%
ggplot(aes(party, medium, fill=congru)) +
geom_tile()
corr.df.sm <- corr.df %>%
select(topic, source, SentiWS_theta2) %>%
spread(source, SentiWS_theta2)
x <- as.matrix(corr.df.sm[,-1])
rs <- correlate(x)
rs %>%
network_plot()
corr_plot <- rs %>%
as_tibble() %>%
dplyr::rename(source1 = rowname) %>%
gather(key = source2, value = corr, -source1) %>%
mutate(
type1 = ifelse(source1 %in% news, "news", "party"),
type2 = ifelse(source2 %in% news, "news", "party")
)
library(patchwork)
p1 <- corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "news") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = color, high = color1) +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Medium") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
axis.text.x = element_text(angle = 90))
p2 <- corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "party") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = color, high = color1) +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
#axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90))
p3 <- corr_plot %>%
filter(type1 == "party") %>%
filter(type2 == "party") %>%
ggplot(aes(source1,
source2,label=round(corr, digits = 2), fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = color, high = color1) +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Partei / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
axis.text.x = element_text(angle = 90))
p1 + p2 + p3
#ggsave("../figs/corrplot.png", width = 10, height =4)
theta <- theta %>%
mutate(SentiWS_theta = SentiWS_dummy*theta,
SentiWS_theta2 = SentiWS_polarity*theta,
BPW_theta = BPW_dummy*theta,
sentDict_theta = sentDict_dummy*theta
)
plot <- theta %>%
group_by(topic,joint_label) %>%
dplyr::summarise(
SentiWS_theta = mean(SentiWS_theta, na.rm = T),
SentiWS_theta2 = mean(SentiWS_theta2, na.rm = T),
BPW_theta = mean(BPW_theta, na.rm = T),
sentDict_theta = mean(sentDict_theta, na.rm = T)
) %>%
ungroup() %>%
# mutate(
#   SentiWS_theta = scaledX(SentiWS_theta),
#   BPW_theta = scaledX(BPW_theta),
#   sentDict_theta = scaledX(sentDict_theta),
#   sentR_theta = scaledX(sentR_theta)
# ) %>%
gather(metric, sent_value, SentiWS_theta:sentDict_theta) %>%
group_by(metric) %>%
mutate(
sent_m = median(sent_value)
) %>% ungroup()
plot %>%
ggplot(aes(reorder(joint_label, -sent_value), sent_value, label=round(sent_value, 3))) +
geom_point(aes(color = metric)) +
geom_line(aes(joint_label, sent_m, color = metric, group = metric), linetype=2) +
coord_flip() +
theme_hc() +
scale_color_gdocs() +
labs(x=NULL, y=NULL)
corr.df <- theta %>%
group_by(topic, type, source, joint_label) %>%
dplyr::summarise(
SentiWS_theta = mean(SentiWS_theta, na.rm = T),
SentiWS_theta2 = mean(SentiWS_theta2, na.rm = T),
BPW_theta = mean(BPW_theta, na.rm = T),
sentDict_theta = mean(sentDict_theta, na.rm = T)
) %>%
ungroup()
# mutate(
#   SentiWS_theta = scaledX(SentiWS_theta),
#   BPW_theta = scaledX(BPW_theta),
#   sentDict_theta = scaledX(sentDict_theta),
#   sentR_theta = scaledX(sentR_theta)
# )
corr.df %>%
ggplot(aes(reorder(joint_label,topic),
SentiWS_theta2, fill=SentiWS_theta2)) +
geom_col(show.legend = F) +
coord_flip() +
theme_hc() +
labs(x=NULL, y=NULL, title="BPW") +
facet_grid(.~source)
corr.df %>%
ggplot(aes(reorder(joint_label,topic),
SentiWS_theta, fill=SentiWS_theta)) +
geom_col(show.legend = F) +
coord_flip() +
theme_hc() +
labs(x=NULL, y=NULL, title="BPW") +
facet_grid(.~source)
library(patchwork)
corr.df.dates <- theta %>%
group_by(topic, type, source, joint_label, month, year) %>%
dplyr::summarise(
theta = mean(theta, na.rm = T),
SentiWS_theta = mean(SentiWS_theta, na.rm = T),
SentiWS = mean(SentiWS, na.rm = T)
) %>%
ungroup()
plot <- corr.df.dates %>%
mutate(
date = as.Date(paste0(year,"/",month,"/1"))
# theta = rescale(theta, min(theta), max(theta), -1,1),
# BPW_theta = rescale(BPW_theta, min(BPW_theta), max(BPW_theta), -1,1),
# BPW = rescale(BPW, min(BPW), max(BPW), -1,1)
) %>% gather(metric, val, theta:SentiWS)
plot_topic <- function(t) {
sample <- plot %>% filter(topic==t)
p1 <- sample %>%
filter(type == "news") %>%
ggplot(aes(date, val, color=metric)) +
geom_line() +
geom_hline(aes(yintercept=0), linetype=2, size=0.5) +
theme_hc() +
labs(x=NULL, y=NULL, title = paste(sample$joint_label[1])) +
ggthemes::scale_color_fivethirtyeight() +
facet_grid(cols = vars(source), rows = vars(metric), scales = "free")
p2 <-sample %>%
filter(type == "press") %>%
ggplot(aes(date, val, color=metric)) +
geom_line(show.legend = F) +
geom_hline(aes(yintercept=0), linetype=2, size=0.5) +
theme_hc() +
labs(x=NULL, y=NULL) +
ggthemes::scale_color_fivethirtyeight() +
facet_grid(cols = vars(source), rows = vars(metric), scales = "free")
p1 + p2 + plot_layout(ncol=1)
}
corr.df.sm <- corr.df %>%
select(topic, source, SentiWS_theta) %>%
spread(source, SentiWS_theta)
x <- as.matrix(corr.df.sm[,-1])
rs <- correlate(x)
rs %>%
network_plot()
corr_plot <- rs %>%
as_tibble() %>%
dplyr::rename(source1 = rowname) %>%
gather(key = source2, value = corr, -source1) %>%
mutate(
type1 = ifelse(source1 %in% news, "news", "party"),
type2 = ifelse(source2 %in% news, "news", "party")
)
library(patchwork)
p1 <- corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "news") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = color, high = color1) +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Medium") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
axis.text.x = element_text(angle = 90))
p2 <- corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "party") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = color, high = color1) +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
#axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90))
p3 <- corr_plot %>%
filter(type1 == "party") %>%
filter(type2 == "party") %>%
ggplot(aes(source1,
source2,label=round(corr, digits = 2), fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = color, high = color1) +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Partei / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
axis.text.x = element_text(angle = 90))
p1 + p2 + p3
#ggsave("../figs/corrplot.png", width = 10, height =4)
radar <- corr_plot %>%
filter(type1 == "party") %>%
filter(type2=="news") %>%
select(source1, source2, corr) %>%
spread(key = source1, value = corr)
ggiraphExtra::ggRadar(radar, aes(color = source2),
rescale = F,
alpha = 0) +
theme_hc() +
scale_color_viridis_d() +
theme(legend.position = "right",
legend.title = element_blank()) +
guides(col = guide_legend(ncol = 1))
#ggsave("../figs/radar_corr.png", width = 5, height = 5, dpi = 200)
ggiraphExtra::ggRadar(radar, aes(color = source2),
rescale = F,
alpha = 0) +
theme_hc() +
scale_color_viridis_d() +
theme(legend.position = "right",
legend.title = element_blank()) +
guides(col = guide_legend(ncol = 1))
ggiraphExtra::ggRadar(radar, aes(color = source2),
rescale = F,
interactive = T,
alpha = 0)
ggiraphExtra::ggRadar(radar, aes(color = source2),
rescale = F,
interactive = F,
alpha = 0)
corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "party") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = "white", high = "gray") +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
#axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90))
corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "party") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = "white", high = "gray") +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
#axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90))
SentiWS.token %>% filter(doc_index == doc) -> sample
doc <- sample(unique(model_df$doc_index),1)
model_df %>% filter(doc_index == doc) %>% select(title)
SentiWS.token %>% filter(doc_index == doc) -> sample
mean(sample$senti_polarity, na.rm = T)
mean(sample$polarity, na.rm = T)
plot <- sent_df %>%
group_by(source, type) %>%
dplyr::summarise(
#SentiWS = mean(SentiWS, na.rm = T),
SentiWS2 = mean(SentiWS_polarity, na.rm = T),
#BPW = mean(BPW, na.rm = T),
#sentDict = mean(sentDict, na.rm = T),
#sentimentR = mean(sentimentR, na.rm = T)
) %>%
ungroup() %>%
gather(metric, sent_value, SentiWS:sentimentR) %>%
group_by(type, metric) %>%
mutate(
sent_m = median(sent_value)
) %>% ungroup()
plot <- sent_df %>%
group_by(source, type) %>%
dplyr::summarise(
#SentiWS = mean(SentiWS, na.rm = T),
SentiWS2 = mean(SentiWS_polarity, na.rm = T),
#BPW = mean(BPW, na.rm = T),
#sentDict = mean(sentDict, na.rm = T),
#sentimentR = mean(sentimentR, na.rm = T)
) %>%
ungroup()
plot <- sent_df %>%
group_by(source, type) %>%
dplyr::summarise(
#SentiWS = mean(SentiWS, na.rm = T),
sent_value = mean(SentiWS_polarity, na.rm = T),
#BPW = mean(BPW, na.rm = T),
#sentDict = mean(sentDict, na.rm = T),
#sentimentR = mean(sentimentR, na.rm = T)
) %>%
ungroup()
ggplot(plot, aes(source, sent_value, label = round(sent_value,3))) +
geom_point(aes(color = metric), size = 3) +
geom_line(aes(source, sent_m, color = metric, group = metric), linetype=2) +
geom_text(show.legend = F, color="black", size=2, vjust=-1) +
coord_flip() +
labs(x=NULL, y=NULL) +
ggthemes::theme_hc() +
ggthemes::scale_color_gdocs() +
theme(legend.position = "bottom")
plot <- sent_df %>%
group_by(source, type) %>%
dplyr::summarise(
#SentiWS = mean(SentiWS, na.rm = T),
sent_value = mean(SentiWS_polarity, na.rm = T),
sent_m = median(sent_value)
#BPW = mean(BPW, na.rm = T),
#sentDict = mean(sentDict, na.rm = T),
#sentimentR = mean(sentimentR, na.rm = T)
) %>%
ungroup()
ggplot(plot, aes(source, sent_value, label = round(sent_value,3))) +
geom_point( size = 3) +
geom_line(aes(source, sent_m,
#color = metric,
#group = metric
), linetype=2) +
geom_text(show.legend = F, color="black", size=2, vjust=-1) +
coord_flip() +
labs(x=NULL, y=NULL) +
ggthemes::theme_hc() +
ggthemes::scale_color_gdocs() +
theme(legend.position = "bottom")
ggplot(plot, aes(source, sent_value, label = round(sent_value,3))) +
geom_point( size = 3) +
geom_line(aes(source, sent_m
#color = metric,
#group = metric
), linetype=2) +
geom_text(show.legend = F, color="black", size=2, vjust=-1) +
coord_flip() +
labs(x=NULL, y=NULL) +
ggthemes::theme_hc() +
ggthemes::scale_color_gdocs() +
theme(legend.position = "bottom")
plot <- sent_df %>%
group_by(source, type) %>%
dplyr::summarise(
#SentiWS = mean(SentiWS, na.rm = T),
sent_value = mean(SentiWS_polarity, na.rm = T)
#BPW = mean(BPW, na.rm = T),
#sentDict = mean(sentDict, na.rm = T),
#sentimentR = mean(sentimentR, na.rm = T)
) %>%
ungroup()
ggplot(plot, aes(source, sent_value, label = round(sent_value,3))) +
geom_point(size = 3) +
#geom_line(aes(source, sent_m, color = metric, group = metric), linetype=2) +
geom_text(show.legend = F, color="black", size=2, vjust=-1) +
coord_flip() +
labs(x=NULL, y=NULL) +
ggthemes::theme_hc() +
ggthemes::scale_color_gdocs() +
theme(legend.position = "bottom")
radar <- plot %>%
select(-type) %>%
spread(source, sent_value)
ggiraphExtra::ggRadar(radar,
#aes(color = metric),
rescale = F,
interactive = T,
alpha = 0)
corr.df %>%
ggplot(aes(reorder(joint_label,topic),
SentiWS_theta2, fill=SentiWS_theta2)) +
geom_col(show.legend = F) +
coord_flip() +
theme_hc() +
labs(x=NULL, y=NULL, title="Weighted topic probability") +
facet_grid(.~source)
corr.df.sm <- corr.df %>%
select(topic, source, SentiWS_theta2) %>%
spread(source, SentiWS_theta2)
x <- as.matrix(corr.df.sm[,-1])
rs <- correlate(x)
rs %>%
network_plot()
corr_plot <- rs %>%
as_tibble() %>%
dplyr::rename(source1 = rowname) %>%
gather(key = source2, value = corr, -source1) %>%
mutate(
type1 = ifelse(source1 %in% news, "news", "party"),
type2 = ifelse(source2 %in% news, "news", "party")
)
corr_plot %>%
filter(type1 == "news") %>%
filter(type2 == "party") %>%
ggplot(aes(source1, source2,
label=round(corr, digits = 2),
fill=corr)) +
geom_tile() +
scale_fill_gradient2(low = "white", high = "gray") +
geom_text(size=1.8) +
theme_hc() +
labs(x = NULL, y = NULL, title = "Medium / Partei") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(legend.position = "none",
axis.text = element_text(size = 6),
#axis.text.y = element_blank(),
axis.text.x = element_text(angle = 90))
